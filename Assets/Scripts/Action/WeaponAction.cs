//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/WeaponAction.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @WeaponAction: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @WeaponAction()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""WeaponAction"",
    ""maps"": [
        {
            ""name"": ""Weapon"",
            ""id"": ""70fa6e0f-ab1a-4049-8585-ff809431a713"",
            ""actions"": [
                {
                    ""name"": ""Add0"",
                    ""type"": ""Button"",
                    ""id"": ""d829562e-c6f8-48b0-9c93-7bca91507d07"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Add1"",
                    ""type"": ""Button"",
                    ""id"": ""0fa90362-c771-41cb-ba7b-0e3816340576"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Add2"",
                    ""type"": ""Button"",
                    ""id"": ""74ced5d1-64a8-43fe-a014-817098b63f9e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Add3"",
                    ""type"": ""Button"",
                    ""id"": ""9f2f44d4-e82a-47c2-9ff1-cfc2066793e8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Add4"",
                    ""type"": ""Button"",
                    ""id"": ""690ab6ef-2db5-4d52-9dd9-cbb9d51944a2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Add5"",
                    ""type"": ""Button"",
                    ""id"": ""679817c0-110c-4c68-8478-aaef0a137e8f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""22fed515-e3b5-4a63-bf78-1765698673ae"",
                    ""path"": ""<Keyboard>/t"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Add0"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""41a816a8-8b01-45bf-8224-2e67b6772e43"",
                    ""path"": ""<Keyboard>/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Add1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0e48f6f3-6871-4a73-81cc-7bc381d02b6f"",
                    ""path"": ""<Keyboard>/u"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Add2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c90cad4f-f7d8-494d-95c0-e6399a14d1a3"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Add3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fd6f6c89-dc76-4e7d-9467-b006a0b23941"",
                    ""path"": ""<Keyboard>/o"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Add4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8b1ba8c7-1165-4077-a64d-e86e37cf2187"",
                    ""path"": ""<Keyboard>/p"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Add5"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""PC"",
            ""bindingGroup"": ""PC"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Weapon
        m_Weapon = asset.FindActionMap("Weapon", throwIfNotFound: true);
        m_Weapon_Add0 = m_Weapon.FindAction("Add0", throwIfNotFound: true);
        m_Weapon_Add1 = m_Weapon.FindAction("Add1", throwIfNotFound: true);
        m_Weapon_Add2 = m_Weapon.FindAction("Add2", throwIfNotFound: true);
        m_Weapon_Add3 = m_Weapon.FindAction("Add3", throwIfNotFound: true);
        m_Weapon_Add4 = m_Weapon.FindAction("Add4", throwIfNotFound: true);
        m_Weapon_Add5 = m_Weapon.FindAction("Add5", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Weapon
    private readonly InputActionMap m_Weapon;
    private List<IWeaponActions> m_WeaponActionsCallbackInterfaces = new List<IWeaponActions>();
    private readonly InputAction m_Weapon_Add0;
    private readonly InputAction m_Weapon_Add1;
    private readonly InputAction m_Weapon_Add2;
    private readonly InputAction m_Weapon_Add3;
    private readonly InputAction m_Weapon_Add4;
    private readonly InputAction m_Weapon_Add5;
    public struct WeaponActions
    {
        private @WeaponAction m_Wrapper;
        public WeaponActions(@WeaponAction wrapper) { m_Wrapper = wrapper; }
        public InputAction @Add0 => m_Wrapper.m_Weapon_Add0;
        public InputAction @Add1 => m_Wrapper.m_Weapon_Add1;
        public InputAction @Add2 => m_Wrapper.m_Weapon_Add2;
        public InputAction @Add3 => m_Wrapper.m_Weapon_Add3;
        public InputAction @Add4 => m_Wrapper.m_Weapon_Add4;
        public InputAction @Add5 => m_Wrapper.m_Weapon_Add5;
        public InputActionMap Get() { return m_Wrapper.m_Weapon; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(WeaponActions set) { return set.Get(); }
        public void AddCallbacks(IWeaponActions instance)
        {
            if (instance == null || m_Wrapper.m_WeaponActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_WeaponActionsCallbackInterfaces.Add(instance);
            @Add0.started += instance.OnAdd0;
            @Add0.performed += instance.OnAdd0;
            @Add0.canceled += instance.OnAdd0;
            @Add1.started += instance.OnAdd1;
            @Add1.performed += instance.OnAdd1;
            @Add1.canceled += instance.OnAdd1;
            @Add2.started += instance.OnAdd2;
            @Add2.performed += instance.OnAdd2;
            @Add2.canceled += instance.OnAdd2;
            @Add3.started += instance.OnAdd3;
            @Add3.performed += instance.OnAdd3;
            @Add3.canceled += instance.OnAdd3;
            @Add4.started += instance.OnAdd4;
            @Add4.performed += instance.OnAdd4;
            @Add4.canceled += instance.OnAdd4;
            @Add5.started += instance.OnAdd5;
            @Add5.performed += instance.OnAdd5;
            @Add5.canceled += instance.OnAdd5;
        }

        private void UnregisterCallbacks(IWeaponActions instance)
        {
            @Add0.started -= instance.OnAdd0;
            @Add0.performed -= instance.OnAdd0;
            @Add0.canceled -= instance.OnAdd0;
            @Add1.started -= instance.OnAdd1;
            @Add1.performed -= instance.OnAdd1;
            @Add1.canceled -= instance.OnAdd1;
            @Add2.started -= instance.OnAdd2;
            @Add2.performed -= instance.OnAdd2;
            @Add2.canceled -= instance.OnAdd2;
            @Add3.started -= instance.OnAdd3;
            @Add3.performed -= instance.OnAdd3;
            @Add3.canceled -= instance.OnAdd3;
            @Add4.started -= instance.OnAdd4;
            @Add4.performed -= instance.OnAdd4;
            @Add4.canceled -= instance.OnAdd4;
            @Add5.started -= instance.OnAdd5;
            @Add5.performed -= instance.OnAdd5;
            @Add5.canceled -= instance.OnAdd5;
        }

        public void RemoveCallbacks(IWeaponActions instance)
        {
            if (m_Wrapper.m_WeaponActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IWeaponActions instance)
        {
            foreach (var item in m_Wrapper.m_WeaponActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_WeaponActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public WeaponActions @Weapon => new WeaponActions(this);
    private int m_PCSchemeIndex = -1;
    public InputControlScheme PCScheme
    {
        get
        {
            if (m_PCSchemeIndex == -1) m_PCSchemeIndex = asset.FindControlSchemeIndex("PC");
            return asset.controlSchemes[m_PCSchemeIndex];
        }
    }
    public interface IWeaponActions
    {
        void OnAdd0(InputAction.CallbackContext context);
        void OnAdd1(InputAction.CallbackContext context);
        void OnAdd2(InputAction.CallbackContext context);
        void OnAdd3(InputAction.CallbackContext context);
        void OnAdd4(InputAction.CallbackContext context);
        void OnAdd5(InputAction.CallbackContext context);
    }
}
